#include <stdio.h>
#include <string.h>

// Function to perform one-time pad Vigen√®re encryption
void vigenereOneTimePadEncrypt(char plaintext[], int key[], char ciphertext[]) {
    int length = strlen(plaintext);

    for (int i = 0; i < length; i++) {
        if (plaintext[i] >= 'A' && plaintext[i] <= 'Z') {
            ciphertext[i] = (plaintext[i] - 'A' + key[i]) % 26 + 'A';
        } else if (plaintext[i] >= 'a' && plaintext[i] <= 'z') {
            ciphertext[i] = (plaintext[i] - 'a' + key[i]) % 26 + 'a';
        } else {
            ciphertext[i] = plaintext[i]; // Keep non-alphabetic characters unchanged
        }
    }
}

int main() {
    char plaintext[] = "SENDMOREMONEY";
    int keyStream[] = {9, 0, 1, 7, 23, 15, 21, 14, 11, 11, 2, 8, 9};
    int keyLength = sizeof(keyStream) / sizeof(keyStream[0]);

    char ciphertext[sizeof(plaintext)];
    
    // Encrypt the plaintext with the given key stream
    vigenereOneTimePadEncrypt(plaintext, keyStream, ciphertext);

    printf("Original Message: %s\n", plaintext);
    printf("Key Stream: ");
    for (int i = 0; i < keyLength; i++) {
        printf("%d ", keyStream[i]);
    }
    printf("\n");
    printf("Encrypted Message: %s\n", ciphertext);

    return 0;
}
