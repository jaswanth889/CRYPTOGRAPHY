#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to generate the cipher sequence based on the keyword
void generateCipherSequence(char keyword[], char cipherSequence[]) {
    int i, j;
    char keyTable[26];
    int keywordLength = strlen(keyword);

    // Initialize the key table with the unique letters of the keyword
    for (i = 0, j = 0; i < keywordLength; ++i) {
        char currentChar = toupper(keyword[i]);
        if (isalpha(currentChar) && !strchr(keyTable, currentChar)) {
            keyTable[j++] = currentChar;
        }
    }

    // Fill in the remaining letters in normal order
    for (char ch = 'A'; ch <= 'Z'; ++ch) {
        if (!strchr(keyTable, ch)) {
            keyTable[j++] = ch;
        }
    }

    // Create the cipher sequence
    for (i = 0; i < 26; ++i) {
        cipherSequence[i] = keyTable[i];
    }

    cipherSequence[i] = '\0';
}

// Function to encrypt the plaintext using the generated cipher sequence
void encryptMonoalphabetic(char plaintext[], char cipherSequence[]) {
    int i;
    char ciphertext[1000];

    for (i = 0; plaintext[i] != '\0'; ++i) {
        char currentChar = toupper(plaintext[i]);

        if (isalpha(currentChar)) {
            char base = 'A';
            ciphertext[i] = cipherSequence[currentChar - base];
        } else {
            ciphertext[i] = currentChar;
        }
    }

    ciphertext[i] = '\0';

    printf("Encrypted message: %s\n", ciphertext);
}

int main() {
    char keyword[] = "CIPHER";
    char cipherSequence[26];
    char plaintext[1000];

    // Generate the cipher sequence based on the keyword
    generateCipherSequence(keyword, cipherSequence);

    printf("Generated Cipher Sequence: %s\n", cipherSequence);

    // Get the plaintext from the user
    printf("Enter the plaintext: ");
    scanf(" %[^\n]s", plaintext);

    // Encrypt the plaintext using the monoalphabetic cipher
    encryptMonoalphabetic(plaintext, cipherSequence);

    return 0;
}
